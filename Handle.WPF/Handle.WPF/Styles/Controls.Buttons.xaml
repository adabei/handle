<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:Handle.WPF.Converters">

  <Converters:ToUpperConverter x:Key="ToUpperConverter" />
  <Converters:ToLowerConverter x:Key="ToLowerConverter" />

  <!-- style for WP7/Circle button -->
  <Style x:Key="MetroCircleButtonStyle"
           TargetType="{x:Type Button}">
    <Setter Property="Background"
                Value="{DynamicResource ButtonNormalBackground}" />
    <Setter Property="BorderBrush"
                Value="{DynamicResource ButtonNormalBorder}" />
    <Setter Property="BorderThickness"
                Value="1" />
    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    <Setter Property="VerticalContentAlignment"
                Value="Center" />
    <Setter Property="Padding"
                Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="grid"
                          Background="#02FFFFFF">
            <Ellipse x:Name="ellipsebg"
                                 Margin="4"
                                 Stroke="{TemplateBinding Foreground}"
                                 StrokeThickness="0"
                                 VerticalAlignment="Stretch" />
            <Ellipse x:Name="ellipse"
                                 Margin="4"
                                 Stroke="{TemplateBinding Foreground}"
                                 StrokeThickness="2"
                                 VerticalAlignment="Stretch" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed"
                                 Value="True">
              <Setter TargetName="ellipsebg"
                                    Property="Fill"
                                    Value="{DynamicResource BlackBrush}" />
              <Setter TargetName="ellipsebg"
                                    Property="Opacity"
                                    Value="0.2" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="True">
              <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="False">
              <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value=".5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                                 Value="true" />
            <Trigger Property="ToggleButton.IsChecked"
                                 Value="true" />
            <Trigger Property="IsEnabled"
                                 Value="false">
              <Setter Property="Foreground"
                                    Value="#ADADAD" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- "Chromeless" style for buttons -->
  <Style x:Key="ChromelessButtonStyle"
           TargetType="{x:Type Button}">
    <Setter Property="Background"
                Value="#02FFFFFF" />
    <Setter Property="Foreground"
                Value="WhiteSmoke" />
    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    <Setter Property="VerticalContentAlignment"
                Value="Center" />
    <Setter Property="Padding"
                Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.5" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                                 Value="True">
              <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.85" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="False">
              <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                                 Value="true" />
            <Trigger Property="ToggleButton.IsChecked"
                                 Value="true" />
            <Trigger Property="IsEnabled"
                                 Value="false">
              <Setter Property="Foreground"
                                    Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="White"/>
              <Setter Property="FontSize" Value="13"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
    <Setter Property="FontWeight" Value="Bold"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Name="RootElement">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="BorderBrush"  Storyboard.TargetProperty="Color"  To="Gray" Duration="0"/>
                    <ColorAnimation Storyboard.TargetName="FontColor"  Storyboard.TargetProperty="Color" To="White" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState Name="Pressed">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="BorderBrush"  Storyboard.TargetProperty="Color" To="Black" Duration="0"/>
                    <ColorAnimation Storyboard.TargetName="FontColor"  Storyboard.TargetProperty="Color" To="White" Duration="0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>


            <Grid Background="Transparent" >
              <Border BorderBrush="Black" BorderThickness="1,1,1,1">
                <Border.Background>
                  <SolidColorBrush x:Name="BorderBrush" Color="White"/>
                </Border.Background>

                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" 
				                        TextBlock.FontFamily="Segoe WP Light" TextBlock.FontSize="12">
                  <TextBlock.Foreground>
                    <SolidColorBrush x:Name="FontColor" Color="Black"/>
                  </TextBlock.Foreground>
                </ContentPresenter>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SquareButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Padding" Value="5,6" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="MouseOverBorder">
                      <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="MouseOverBorder">
                      <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                    </ThicknessAnimationUsingKeyFrames>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="PressedBorder">
                      <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                        							Storyboard.TargetName="DisabledVisualElement">
                      <SplineDoubleKeyFrame KeyTime="0"
                        								Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                        							Storyboard.TargetName="contentPresenter">
                      <EasingDoubleKeyFrame KeyTime="0"
                        								Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidFocused"/>
                <VisualState x:Name="InvalidUnfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" BorderBrush="{DynamicResource BlackBrush}" BorderThickness="2" Background="{DynamicResource WhiteColorBrush}" />
            <Rectangle x:Name="DisabledVisualElement"
                        			Fill="{DynamicResource ControlsDisabledBrush}"
                        			IsHitTestVisible="false"
                        			Opacity="0" />
            <Border x:Name="MouseOverBorder"
                        			Background="{DynamicResource GrayBrush8}"
                        			Opacity="0" />
            <Border x:Name="PressedBorder" Background="{DynamicResource BlackBrush}" Opacity="0" BorderBrush="{DynamicResource BlackBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			Content="{TemplateBinding Content, Converter={StaticResource ToLowerConverter}}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			Margin="{TemplateBinding Padding}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="{x:Null}" />
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>