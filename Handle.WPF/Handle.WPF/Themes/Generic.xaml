<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org" 
                    xmlns:Controls="clr-namespace:Handle.WPF.Controls"
                    xmlns:Behaviours="clr-namespace:Handle.WPF.Behaviours"
                    xmlns:conv="clr-namespace:Handle.WPF.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Handle.WPF;component/Styles/Colours.xaml" />
    <ResourceDictionary Source="pack://application:,,,/Handle.WPF;component/Styles/Fonts.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

  <Style TargetType="{x:Type Controls:MetroContentControl}">
    <Setter Property="Foreground"
                Value="#FF000000" />
    <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
    <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Controls:MetroContentControl">
          <Grid x:Name="root"
                          RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
              <TranslateTransform />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="LayoutStates">
                <VisualState x:Name="AfterLoaded">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.400"
                                                                  Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                       Storyboard.TargetName="root">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="-30" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700"
                                                                  Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AfterUnLoaded">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100"
                                                                  Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                       Storyboard.TargetName="root">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100"
                                                                  Value="-30" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BeforeLoaded" />
                <VisualState x:Name="BeforeUnloaded" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Controls:Tile">
    <Setter Property="Width"
                Value="140" />
    <Setter Property="Height"
                Value="140" />
    <Setter Property="Margin"
                Value="3" />
    <Setter Property="Foreground"
                Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Controls:Tile">
          <Grid>
            <Grid.Background>
              <SolidColorBrush Color="{DynamicResource AccentColor}" />
            </Grid.Background>

            <StackPanel VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Orientation="Horizontal">
              <ContentPresenter RecognizesAccessKey="True" />

              <TextBlock Text="{TemplateBinding Count}"
                                       FontSize="28"
                                       VerticalAlignment="Center" />
            </StackPanel>

            <Label Grid.ColumnSpan="2"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Bottom"
                               Foreground="{TemplateBinding Foreground}">
              <AccessText Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                                        Foreground="{TemplateBinding Foreground}"
                                        TextWrapping="Wrap"
                                        FontSize="16"
                                        Margin="3" />
            </Label>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsPressed"
                                 Value="True">
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="0.98"
                                                    ScaleY="0.98"
                                                    CenterX="0.5"
                                                    CenterY="0.5" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Controls:MetroImage">
    <Setter Property="Width"
                Value="48" />
    <Setter Property="Height"
                Value="48" />
    <Setter Property="Foreground"
                Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Controls:MetroImage">
          <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Foreground}">
            <Rectangle.OpacityMask>
              <VisualBrush Visual="{Binding Source, RelativeSource={RelativeSource TemplatedParent}}"
                                         Stretch="Fill" />
            </Rectangle.OpacityMask>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Controls:AppBarButton">
    <Setter Property="Background"
                Value="{DynamicResource ButtonNormalBackground}" />
    <Setter Property="BorderBrush"
                Value="{DynamicResource ButtonNormalBorder}" />
    <Setter Property="BorderThickness"
                Value="1" />
    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    <Setter Property="VerticalContentAlignment"
                Value="Center" />
    <Setter Property="Padding"
                Value="1" />
    <Setter Property="FontSize"
                Value="12" />
    <Setter Property="Width"
                Value="80" />
    <Setter Property="Height"
                Value="80" />
    <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:AppBarButton}">
          <Grid x:Name="grid"
                          Background="#02FFFFFF"
                          Margin="{TemplateBinding Padding}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Viewbox>
              <Grid>
                <Ellipse x:Name="ellipsebg"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="0"
                                         VerticalAlignment="Stretch"
                                         Width="48"
                                         Height="48" />
                <Ellipse x:Name="ellipse"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="2"
                                         VerticalAlignment="Stretch"
                                         Width="48"
                                         Height="48" />
                <Rectangle Width="28"
                                           Height="28"
                                           Fill="{TemplateBinding Foreground}">
                  <Rectangle.OpacityMask>
                    <VisualBrush Visual="{Binding MetroImageSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Stretch="Fill" />
                  </Rectangle.OpacityMask>
                </Rectangle>
              </Grid>
            </Viewbox>
            <ContentPresenter RecognizesAccessKey="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed"
                                 Value="True">
              <Setter TargetName="ellipsebg"
                                    Property="Fill"
                                    Value="{DynamicResource BlackBrush}" />
              <Setter TargetName="ellipsebg"
                                    Property="Opacity"
                                    Value="0.2" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="True">
              <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="False">
              <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value=".5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                                 Value="true" />
            <Trigger Property="ToggleButton.IsChecked"
                                 Value="true" />
            <Trigger Property="IsEnabled"
                                 Value="false">
              <Setter Property="Foreground"
                                    Value="#ADADAD" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Controls:MetroWindow}">
    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
      <Grid>
        <AdornerDecorator>
          <Controls:MetroContentControl>           
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <ProgressBar Height="10" Width="350" Visibility="{TemplateBinding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}"/>
              </Grid>
              <Grid x:Name="PART_TitleBar" Height="45" Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Background>
                  <SolidColorBrush Color="{DynamicResource AccentColor}"/>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition Width="*"/>
                  
                </Grid.ColumnDefinitions>
                <Image
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Source="{TemplateBinding Icon}"/>
                <TextBlock
                                    Grid.Column="1"
                                    Text="{TemplateBinding TitleText}"
                                    HorizontalAlignment="Left" 
                                    TextTrimming="CharacterEllipsis"
                                    VerticalAlignment="Center" 
                                    Margin="8 0 0 0" 
                                    FontSize="13" 
                                    FontFamily="{DynamicResource HeaderFontFamily}"
                                    Foreground="White"/>
                
              </Grid>
              <Image Source="/Handle.WPF;component/Images/settings.png" Visibility="{TemplateBinding ShowSettingsInTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,0,100,10" ToolTip="Settings" HorizontalAlignment="Right" VerticalAlignment="Center" MaxHeight="30" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action ShowSettings]">
                <Image.Style>
                  <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                      <Trigger Property="IsMouseOver"
                                 Value="True">
                        <Setter Property="Opacity" Value="1" />
                      </Trigger>
                      <Trigger Property="IsMouseOver"
                                 Value="False">
                        <Setter Property="Opacity" Value=".5" />
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </Image.Style>
              </Image>
              <Controls:WindowCommands 
                                x:Name="PART_WindowCommands"
                                Panel.ZIndex="1"
                                Grid.RowSpan="2"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"/>
              <ContentPresenter Grid.Row="1"/>
            </Grid>
          </Controls:MetroContentControl>
        </AdornerDecorator>
        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type Controls:MetroWindow}">
    <Setter Property="Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource BlackColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Behaviours:StylizedBehaviors.Behaviors">
      <Setter.Value>
        <Behaviours:StylizedBehaviorCollection>
          <Behaviours:BorderlessWindowBehavior/>
        </Behaviours:StylizedBehaviorCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
  </Style>
</ResourceDictionary>
