<Window x:Class="Handle.WPF.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org" 
        Title="Handle" WindowStyle="None" ResizeMode="CanResizeWithGrip" WindowStartupLocation="Manual"
        AllowsTransparency="True" Width="600" Height="320" WindowState="{Binding WindowState}"
        Top="{Binding Top, Mode=TwoWay}" Left="{Binding Left, Mode=TwoWay}" 
        MaxWidth="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}"
        MaxHeight="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}">

  <Window.Resources>
    <Style x:Key="WindowStateButton" TargetType="Button">
      <Setter Property="Width" Value="30"/>
      <Setter Property="FontFamily" Value="Webdings"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Template">
           <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        <ControlTemplate.Triggers>
                        <Trigger Property="IsCancel" Value="False"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <BooleanToVisibilityConverter x:Key="booleanToVisbility"/>
  </Window.Resources>

  <Grid ShowGridLines="True">

    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="40"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Rectangle x:Name="HeaderAreaRectangle" Grid.ColumnSpan="3" Grid.Row="0" Fill="Gray" Width="Auto" Height="Auto" MouseDown="HeaderAreaRectangle_MouseDown"/>

    <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
      <Button x:Name="Minimize" Style="{StaticResource WindowStateButton}" ToolTip="Minimize">0</Button>
      <Button x:Name="Maximize" Style="{StaticResource WindowStateButton}" ToolTip="Maximize" Visibility="{Binding IsNormal, Converter={StaticResource booleanToVisbility}}">1</Button>
      <Button x:Name="Restore" Style="{StaticResource WindowStateButton}" ToolTip="Restore" Visibility="{Binding IsMaximized, Converter={StaticResource booleanToVisbility}}">2</Button>
      <Button x:Name="Exit" Style="{StaticResource WindowStateButton}" ToolTip="Close">r</Button>
    </StackPanel>  
    </Grid>
</Window>
    <!--<ContentControl x:Name="ActiveItem" Grid.Row="1" Grid.ColumnSpan="3"/>-->
