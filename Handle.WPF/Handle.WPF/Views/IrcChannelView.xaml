<UserControl x:Class="Handle.WPF.IrcChannelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:Converters="clr-namespace:Handle.WPF.Converters"
             xmlns:Controls="clr-namespace:Handle.WPF.Controls"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

  <UserControl.Resources>
    <Converters:MessageConverter x:Key="messageConverter"/>
    <Converters:NickConverter x:Key="nickConverter"/>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Padding="{TemplateBinding Padding}">
              <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="19"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Border>
              <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Padding="{TemplateBinding Padding}">
              <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" MinWidth="0"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="True" VerticalAlignment="Center" Height="Auto" 
                                  MinHeight="25"  RenderTransformOrigin="0.5,0.5"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderStyleTopic" TargetType="{x:Type Expander}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
              <DockPanel>
                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
              </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Topic}" TextTrimming="WordEllipsis"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Topic}" TextWrapping="Wrap"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <Grid x:Name="MainGrid">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="Auto" MaxWidth="200"/>
    </Grid.ColumnDefinitions>

    <Expander x:Name="TopicExpander"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" ExpandDirection="Down" Style="{DynamicResource ExpanderStyleTopic}"/>

    <!-- Messages -->
    <ScrollViewer Grid.Row="1" Grid.Column="0" x:Name="MessagesScrollViewer">
      <StackPanel>
        <ItemsControl x:Name="Messages" FontFamily="{Binding Settings.FontFamily}" FontSize="{Binding Settings.FontSize}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"  Text="{Binding Received}"/>
                <TextBlock Grid.Column="1" Margin="5,0,0,0" Text="{Binding Sender}"/>
                <ContentControl Grid.Column="2" Margin="5,0,0,0" Content="{Binding Converter={StaticResource messageConverter}}"/>
              </Grid>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </StackPanel>
    </ScrollViewer>

    <!-- Userlist -->
    <ScrollViewer Grid.Row="1" Grid.Column="1">
      <StackPanel x:Name="UserList">
        <ItemsControl x:Name="Users">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <!-- <TextBlock Tag="{Binding DataContext, ElementName=Users}" Text="{Binding User.NickName}">-->
              <TextBlock Tag="{Binding DataContext, ElementName=Users}" Text="{Binding Converter={StaticResource nickConverter}}">
                <TextBlock.ContextMenu>
                  <ContextMenu cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="WhoIs" 
                              cal:Message.Attach="[Event Click] = [Action WhoIs($dataContext)]"/>
                    <MenuItem Header="Query" 
                              cal:Message.Attach="[Event Click] = [Action Query($dataContext)]"/>
                  </ContextMenu>
                </TextBlock.ContextMenu>
              </TextBlock>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </StackPanel>
    </ScrollViewer>
    
    <!-- AppBar -->
    <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
      <Image  Height="35" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action OpenContextMenu]" ToolTip="Connect to network or channel"
              Source="/Handle.WPF;component/Images/add_small.png" Margin="2" Opacity="0.6">
        <Image.ContextMenu>
          <ContextMenu x:Name="CoMenu">
            <MenuItem x:Name="JoinChannel" Header="Channel" cal:Message.Attach="[Event Click] = [Action JoinChannel]"/>
            <MenuItem x:Name="JoinNetwork" Header="Network" cal:Message.Attach="[Event Click] = [Action JoinNetwork]"/>
          </ContextMenu>
        </Image.ContextMenu>
      </Image>
      <TextBox x:Name="Message" Width="350" Height="30" cal:Message.Attach="[Event PreviewKeyUp] = [Action MessagePreviewKeyUp($source, $eventArgs)]" AcceptsTab="True"/>
      <Controls:ImageButton x:Name="Send" ImageSource="/Handle.WPF;component/Images/message.png" ToolTip="SendMessage" Height="35" Width="35"></Controls:ImageButton>
    </StackPanel>

    <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal">
      <Image Source="/Handle.WPF;component/Images/save.png" ToolTip="Save Message Text" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action SaveMessages]" Height="25">
        <Image.Style>
          <Style TargetType="{x:Type Image}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger
                Binding="{Binding ElementName=MessagesScrollViewer, Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>
      <Image Source="/Handle.WPF;component/Images/cancel.png" ToolTip="Clear Message Text" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action ClearMessages]" Height="25">
        <Image.Style>
          <Style TargetType="{x:Type Image}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger
                Binding="{Binding ElementName=MessagesScrollViewer, Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>
    </StackPanel>
  </Grid>
</UserControl>
