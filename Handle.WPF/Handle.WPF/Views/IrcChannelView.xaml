<UserControl x:Class="Handle.WPF.IrcChannelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:Converters="clr-namespace:Handle.WPF.Converters"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

  <UserControl.Resources>
    <Converters:StringToMessageConverter x:Key="stringToMessageConverter"/>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Padding="{TemplateBinding Padding}">
              <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="19"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Border>
              <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Padding="{TemplateBinding Padding}">
              <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" MinWidth="0"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" Height="Auto" MinHeight="25"  RenderTransformOrigin="0.5,0.5">
                  
                </ContentPresenter>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderStyleTopic" TargetType="{x:Type Expander}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
              <DockPanel>
                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
              </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Topic}" TextTrimming="WordEllipsis"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Topic}" TextWrapping="Wrap"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpanderStyleUsers" TargetType="{x:Type Expander}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
              <DockPanel>
                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
              </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Users}" TextTrimming="WordEllipsis"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Setter Property="Header">
                  <Setter.Value>
                    <TextBlock Text="{Binding Users}" TextWrapping="Wrap"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <StackPanel Grid.Row="0">
      <Expander x:Name="TopicExpander" ExpandDirection="Down" Style="{DynamicResource ExpanderStyleTopic}">
      </Expander>

      <Expander x:Name="UsersExpander" ExpandDirection="Down" Style="{DynamicResource ExpanderStyleUsers}">
        
      </Expander>

    </StackPanel>
    
    <ScrollViewer Grid.Row="1">
      <ItemsControl x:Name="Messages">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Vertical">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="50"/>
                  <ColumnDefinition Width="Auto" MaxWidth="250"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Received}"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Sender}"/>
                <ContentControl Grid.Column="2" Grid.Row="0" Content="{Binding Text, Converter={StaticResource stringToMessageConverter}}"/>
              </Grid>
            </StackPanel>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </ScrollViewer>
   
    <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
      <Image  Height="50" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action OpenContextMenu]" ToolTip="Connect to network or channel" Source="/Handle.WPF;component/Images/add_big.png" Margin="2">
        <Image.ContextMenu>
          <ContextMenu x:Name="CoMenu">
            <MenuItem x:Name="JoinNetwork" Header="Network" cal:Message.Attach="[Event Click] = [Action JoinChannel]"/>
            <MenuItem x:Name="JoinChannel" Header="Channel" cal:Message.Attach="[Event Click] = [Action JoinChannel]"/>
          </ContextMenu>
        </Image.ContextMenu>
      </Image>
      <TextBox x:Name="Message" Width="150" Height="50"/>
      <Image  Height="50" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Send]" ToolTip="Send Message" Source="/Handle.WPF;component/Images/msg.png" Margin="2"/>
    </StackPanel>
      <StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
        <Image Source="/Handle.WPF;component/Images/save.png" ToolTip="Save Message Text" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action SaveMessages]" Height="25"/>
        <Image Source="/Handle.WPF;component/Images/cancel.png" ToolTip="Clear Message Text" cal:Message.Attach="[Event MouseLeftButtonUp] = [Action ClearMessages]" Height="25"/>
      </StackPanel>
    </Grid>
</UserControl>
